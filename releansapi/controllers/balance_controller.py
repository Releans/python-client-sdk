# -*- coding: utf-8 -*-

"""
    releansapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

from releansapi.api_helper import APIHelper
from releansapi.configuration import Configuration
from releansapi.controllers.base_controller import BaseController
from releansapi.http.auth.o_auth_2 import OAuth2
from releansapi.models.response_2002 import Response2002

class BalanceController(BaseController):

    """A Controller to access Endpoints in the releansapi API."""


    def get_balance(self,
                    accept):
        """Does a GET request to /balance.

        Get your available balance

        Args:
            accept (string): TODO: type description here. Example: 

        Returns:
            Response2002: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _url_path = '/balance'
        _query_builder = Configuration.get_base_uri()
        _query_builder += _url_path
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare headers
        _headers = {
            'Accept': accept
        }

        # Prepare and execute request
        _request = self.http_client.get(_query_url, headers=_headers)
        OAuth2.apply(_request)
        _context = self.execute_request(_request)
        self.validate_response(_context)

        # Return appropriate type
        return APIHelper.json_deserialize(_context.response.raw_body, Response2002.from_dictionary)
