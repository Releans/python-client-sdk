# -*- coding: utf-8 -*-

"""
    releansapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Response2001(object):

    """Implementation of the 'Response_2001' model.

    TODO: type model description here.

    Attributes:
        id (string): TODO: type description here.
        sender_name (string): TODO: type description here.
        phone_number (string): TODO: type description here.
        status (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id":'id',
        "sender_name":'senderName',
        "phone_number":'phoneNumber',
        "status":'status'
    }

    def __init__(self,
                 id=None,
                 sender_name=None,
                 phone_number=None,
                 status=None):
        """Constructor for the Response2001 class"""

        # Initialize members of the class
        self.id = id
        self.sender_name = sender_name
        self.phone_number = phone_number
        self.status = status


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get('id')
        sender_name = dictionary.get('senderName')
        phone_number = dictionary.get('phoneNumber')
        status = dictionary.get('status')

        # Return an object of this model
        return cls(id,
                   sender_name,
                   phone_number,
                   status)


