# -*- coding: utf-8 -*-

"""
    releansapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import jsonpickle
import dateutil.parser
from .controller_test_base import ControllerTestBase
from ..test_helper import TestHelper
from releansapi.api_helper import APIHelper


class SenderControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(SenderControllerTests, cls).setUpClass()
        cls.controller = cls.api_client.sender

    # Return the details of the sender name.
    def test_sender_name_details(self):
        # Parameters for the API call
        id = 'sender-id'
        accept = '*/*'

        # Perform the API call through the SDK function
        result = self.controller.get_sender_name_details(id, accept)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

    # Create a new sender id to send messages using it
    def test_create_sender_name(self):
        # Parameters for the API call
        accept = 'text/plain'
        content_type = 'text/plain'
        body = 'Your sender name'

        # Perform the API call through the SDK function
        result = self.controller.create_sender_name(accept, content_type, body)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = None

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))

        
        # Test whether the captured response is as we expected
        self.assertIsNotNone(result)
        self.assertEqual('{"id":"ABCDEF"}', self.response_catcher.response.raw_body)


    # List all senders names associated with the account
    def test_get_all_senders(self):
        # Parameters for the API call
        accept = '*/*'

        # Perform the API call through the SDK function
        result = self.controller.get_all_senders(accept)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)
        
        # Test whether the captured response is as we expected
        self.assertIsNotNone(result)
        self.assertEqual('[{"id":"xEYgLPQZOpnel5aKBzyVXvAWJ","senderName":"RELEANS","phoneNumber":"+15105607102","status":1}]', self.response_catcher.response.raw_body)


